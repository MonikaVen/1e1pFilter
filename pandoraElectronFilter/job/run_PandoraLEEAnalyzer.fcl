#include "services_microboone.fcl"
#include "detectorclocks_microboone.fcl"
#include "pandora_lee_ana.fcl"

process_name : PandoraLEEAnalyzer      #The process name must NOT contain any underscores

source : {
  module_type : RootInput
  maxEvents   : -1
}

services :
{
  scheduler:                { defaultExceptions: false }    # Make all uncaught exceptions fatal.
  TFileService:             { fileName: "PandoraLEEAnalyzer.root" }
  TimeTracker:              {}
  RandomNumberGenerator:    {}
  @table::microboone_services_reco
  BackTracker:             @local::microboone_backtracker

}

outputs: {
  optionalout: {
    module_type: RootOutput
    fileName: "output_file.root"
    dataTier: "reconstructed"
    fastCloning: false
  }
}


physics: {

  producers : {
     # ParameterSets for zero or more producer modules
  }
  analyzers: {
     # ParameterSets for zero or more analyzer modules
     robertoana:  @local::lee_pandora_analyzer
     wouterana:   @local::electron_selection_ana

  }

  filters : {
     # ParameterSets for zero or more filter modules
  }

  path0 : [  robertoana, wouterana ]

  #path1 : [  comma separated list of module labels of analyzer or output modules  ]
  #path2 : [  comma separated list of module labels of analyzer or output modules  ]
  #path3 : [  comma separated list of module labels of analyzer or output modules  ]

  #here, just a shorthand: could have done ana: [ robertoana ] then end_paths: [ ana ]
  end_paths: [ path0 ]

}
services.DetectorClocksService.InheritClockConfig:                                   false
services.DetectorClocksService.TriggerOffsetTPC:                                     -0.400e3


