#include "services_microboone.fcl"
#include "singles_microboone.fcl"
#include "largeantmodules_microboone.fcl"
#include "mcreco.fcl"
#include "detsimmodules_microboone.fcl"
#include "triggersim_microboone.fcl"
#include "opticaldetectorsim_microboone.fcl"
#include "opticaldetectormodules_microboone.fcl"
#include "photpropservices_microboone.fcl"
#include "correct_saturation.fcl"
#include "caldata_microboone.fcl" 
#include "time_memory_tracker_microboone.fcl"
#include "photpropservices_microboone.fcl"

#include "pandora_lee_ana.fcl"


#include "neutrinomcflash.fcl"
#include "T0RecoAnodeCathodePiercing.fcl"
#include "ubflashfinder.fcl"
#include "neutrinoflashmatch.fcl"
#include "cosmicflashmatch.fcl"
#include "ubxsec.fcl"

process_name : PandoraLEEAnalyzer      #The process name must NOT contain any underscores

source : {
  module_type : RootInput
  maxEvents   : -1
}

services :
{
  scheduler:                { defaultExceptions: false }    # Make all uncaught exceptions fatal.
  TFileService:             { fileName: "PandoraLEEAnalyzer.root" }
  TimeTracker:              {}
  RandomNumberGenerator:    {}
  @table::microboone_services_reco
  @table::microboone_simulation_services
  BackTracker:             @local::microboone_backtracker

}

outputs: {
  optionalout: {
    module_type: RootOutput
    fileName: "output_file.root"
    dataTier: "reconstructed"
    fastCloning: false
  }
}


physics: {

  producers : {
     # ParameterSets for zero or more producer modules
     NeutrinoMCFlash    : @local::NeutrinoMCFlash
     NeutrinoFlashMatch : @local::NeutrinoFlashMatch
     CosmicFlashMatch   : @local::CosmicFlashMatch
     T0TrackTaggerCosmicpandoraNu : @local::T0RecoAnodeCathodePiercing_mc
     T0TrackTaggerBeampandoraNu   : @local::T0RecoAnodeCathodePiercing_mc
  }
  analyzers: {
     # ParameterSets for zero or more analyzer modules
     robertoana:  @local::lee_pandora_analyzer
     UBXSec: @local::UBXSec

  }

  filters : {
     # ParameterSets for zero or more filter modules
  }
  reco: [ NeutrinoMCFlash, 
          NeutrinoFlashMatch,
          T0TrackTaggerCosmicpandoraNu, T0TrackTaggerBeampandoraNu ]

  path0 : [  robertoana, UBXSec ]

  #path1 : [  comma separated list of module labels of analyzer or output modules  ]
  #path2 : [  comma separated list of module labels of analyzer or output modules  ]
  #path3 : [  comma separated list of module labels of analyzer or output modules  ]

  #here, just a shorthand: could have done ana: [ robertoana ] then end_paths: [ ana ]
  trigger_paths: [ reco  ]
  end_paths: [ path0 ]

}
services.DetectorClocksService.InheritClockConfig:         false
services.DetectorClocksService.TriggerOffsetTPC:           -0.400e3
services.ChannelStatusService.ChannelStatusProvider.UseDB: false
services.message.destinations :
{
  STDCOUT:
  {
     type:      "cout"      #tells the message service to output this destination to cout
     threshold: "WARNING"   #tells the message service that this destination applies to WARNING and higher level messages
     append:     true       #says to append all messages to the output
     categories:
     {
       ChannelFilter:
       {
         limit: 0
         reportEvery: 0
       }
       default:
       {
         limit: -1  #don't print anything at the infomsg level except the explicitly named categories
         reportEvery: 1
       }
     }
  }
}
