#include "services_microboone.fcl"
#include "electron_filter_pandora.fcl"

process_name: ElectronFilterPandora      #The process name must NOT contain any underscores

source: 
{
  module_type: RootInput
  maxEvents:   -1
}

services: {

  scheduler:               { defaultExceptions: false }    # Make all uncaught exceptions fatal.
  TFileService: { fileName: "ElectronFilterPandora_ana.root" }
#  Timing:       {}
#  SimpleMemoryCheck:     { ignoreTotal: 1 }     #default is one
  RandomNumberGenerator: {}                     #ART native random number generator
  #message:                 @local::microboone_message_services_prod_debug
  message:      @local::standard_info
#  user:
#  {
	#BELOW you see a list of the common services! Uncomment the ones you need.
  	ExptGeoHelperInterface:         @local::microboone_geometry_helper
  	Geometry:                       @local::microboone_geo
# 	DetectorProperties:             @local::microboone_detproperties
# 	LArProperties:                  @local::microboone_properties
# 	DatabaseUtil:                   @local::microboone_database
# 	TimeService:                    @local::microboone_timeservice
# 	SpaceCharge:                    @local::microboone_spacecharge
# 	SeedService:                    @local::microboone_seedservice
#	LArFFT:                         @local::microboone_larfft
#	SignalShapingServiceMicroBooNE: @local::microboone_signalshapingservice
#	BackTracker:                    @local::microboone_backtracker  
	#MemoryPeakReporter: {}
	#OpDigiProperties:               @local::microboone_opdigiproperties
 # }

}

physics: {

  producers: {
     # ParameterSets for zero or more producer modules
  }
  analyzers: {
     # ParameterSets for zero or more analyzer modules
  }

  filters: {
    electronfilterpandora: @local::lee_electron_filter	

     # ParameterSets for zero or more filter modules
  }

  analyzeIt:[
          
             ]
  path0: [ electronfilterpandora ]
  stream: [ outPass ]
  #path1 : [  comma separated list of module labels of producer or filter modules  ]

  #path2 : [  comma separated list of module labels of analyzer or output modules  ]
  #path3 : [  comma separated list of module labels of analyzer or output modules  ]


  trigger_paths: [ path0 ]
  end_paths:    [ analyzeIt, stream ]

}

outputs: {
    outPass: { module_type: RootOutput
               fileName: "pandoraElectronFilterPass.root"
               SelectEvents: [ path0 ] 
               compressionLevel: 1
             }
    # outFail: { module_type: RootOutput
    #            fileName: "pandoraElectronFilterFail.root"
    #            SelectEvents: { SelectEvents: [ path0 ] }
    #            compressionLevel: 1
    #          }
}

#services.user.DetectorProperties.NumberTimeSamples:                             6400
#services.user.DetectorProperties.ReadOutWindowSize:                             6400
#services.DetectorClocksService.InheritClockConfig:  false
#services.user.TimeService.TriggerOffsetTPC:                                     -0.400e3

